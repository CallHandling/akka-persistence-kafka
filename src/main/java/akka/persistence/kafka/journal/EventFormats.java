// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protobuf/EventFormats.proto

package akka.persistence.kafka.journal;

public final class EventFormats {
  private EventFormats() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EventFormatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string persistenceId = 1;
    /**
     * <code>optional string persistenceId = 1;</code>
     */
    boolean hasPersistenceId();
    /**
     * <code>optional string persistenceId = 1;</code>
     */
    java.lang.String getPersistenceId();
    /**
     * <code>optional string persistenceId = 1;</code>
     */
    com.google.protobuf.ByteString
        getPersistenceIdBytes();

    // optional int64 sequenceNr = 2;
    /**
     * <code>optional int64 sequenceNr = 2;</code>
     */
    boolean hasSequenceNr();
    /**
     * <code>optional int64 sequenceNr = 2;</code>
     */
    long getSequenceNr();

    // optional .EventDataFormat data = 3;
    /**
     * <code>optional .EventDataFormat data = 3;</code>
     */
    boolean hasData();
    /**
     * <code>optional .EventDataFormat data = 3;</code>
     */
    akka.persistence.kafka.journal.EventFormats.EventDataFormat getData();
    /**
     * <code>optional .EventDataFormat data = 3;</code>
     */
    akka.persistence.kafka.journal.EventFormats.EventDataFormatOrBuilder getDataOrBuilder();
  }
  /**
   * Protobuf type {@code EventFormat}
   */
  public static final class EventFormat extends
      com.google.protobuf.GeneratedMessage
      implements EventFormatOrBuilder {
    // Use EventFormat.newBuilder() to construct.
    private EventFormat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EventFormat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EventFormat defaultInstance;
    public static EventFormat getDefaultInstance() {
      return defaultInstance;
    }

    public EventFormat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EventFormat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              persistenceId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sequenceNr_ = input.readInt64();
              break;
            }
            case 26: {
              akka.persistence.kafka.journal.EventFormats.EventDataFormat.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(akka.persistence.kafka.journal.EventFormats.EventDataFormat.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.persistence.kafka.journal.EventFormats.internal_static_EventFormat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.persistence.kafka.journal.EventFormats.internal_static_EventFormat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.persistence.kafka.journal.EventFormats.EventFormat.class, akka.persistence.kafka.journal.EventFormats.EventFormat.Builder.class);
    }

    public static com.google.protobuf.Parser<EventFormat> PARSER =
        new com.google.protobuf.AbstractParser<EventFormat>() {
      public EventFormat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventFormat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EventFormat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string persistenceId = 1;
    public static final int PERSISTENCEID_FIELD_NUMBER = 1;
    private java.lang.Object persistenceId_;
    /**
     * <code>optional string persistenceId = 1;</code>
     */
    public boolean hasPersistenceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string persistenceId = 1;</code>
     */
    public java.lang.String getPersistenceId() {
      java.lang.Object ref = persistenceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          persistenceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string persistenceId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPersistenceIdBytes() {
      java.lang.Object ref = persistenceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        persistenceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 sequenceNr = 2;
    public static final int SEQUENCENR_FIELD_NUMBER = 2;
    private long sequenceNr_;
    /**
     * <code>optional int64 sequenceNr = 2;</code>
     */
    public boolean hasSequenceNr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 sequenceNr = 2;</code>
     */
    public long getSequenceNr() {
      return sequenceNr_;
    }

    // optional .EventDataFormat data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private akka.persistence.kafka.journal.EventFormats.EventDataFormat data_;
    /**
     * <code>optional .EventDataFormat data = 3;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .EventDataFormat data = 3;</code>
     */
    public akka.persistence.kafka.journal.EventFormats.EventDataFormat getData() {
      return data_;
    }
    /**
     * <code>optional .EventDataFormat data = 3;</code>
     */
    public akka.persistence.kafka.journal.EventFormats.EventDataFormatOrBuilder getDataOrBuilder() {
      return data_;
    }

    private void initFields() {
      persistenceId_ = "";
      sequenceNr_ = 0L;
      data_ = akka.persistence.kafka.journal.EventFormats.EventDataFormat.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPersistenceIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, sequenceNr_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPersistenceIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, sequenceNr_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventFormat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.persistence.kafka.journal.EventFormats.EventFormat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EventFormat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.persistence.kafka.journal.EventFormats.EventFormatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.persistence.kafka.journal.EventFormats.internal_static_EventFormat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.persistence.kafka.journal.EventFormats.internal_static_EventFormat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.persistence.kafka.journal.EventFormats.EventFormat.class, akka.persistence.kafka.journal.EventFormats.EventFormat.Builder.class);
      }

      // Construct using akka.persistence.kafka.journal.EventFormats.EventFormat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        persistenceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceNr_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dataBuilder_ == null) {
          data_ = akka.persistence.kafka.journal.EventFormats.EventDataFormat.getDefaultInstance();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.persistence.kafka.journal.EventFormats.internal_static_EventFormat_descriptor;
      }

      public akka.persistence.kafka.journal.EventFormats.EventFormat getDefaultInstanceForType() {
        return akka.persistence.kafka.journal.EventFormats.EventFormat.getDefaultInstance();
      }

      public akka.persistence.kafka.journal.EventFormats.EventFormat build() {
        akka.persistence.kafka.journal.EventFormats.EventFormat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public akka.persistence.kafka.journal.EventFormats.EventFormat buildPartial() {
        akka.persistence.kafka.journal.EventFormats.EventFormat result = new akka.persistence.kafka.journal.EventFormats.EventFormat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.persistenceId_ = persistenceId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sequenceNr_ = sequenceNr_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.persistence.kafka.journal.EventFormats.EventFormat) {
          return mergeFrom((akka.persistence.kafka.journal.EventFormats.EventFormat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.persistence.kafka.journal.EventFormats.EventFormat other) {
        if (other == akka.persistence.kafka.journal.EventFormats.EventFormat.getDefaultInstance()) return this;
        if (other.hasPersistenceId()) {
          bitField0_ |= 0x00000001;
          persistenceId_ = other.persistenceId_;
          onChanged();
        }
        if (other.hasSequenceNr()) {
          setSequenceNr(other.getSequenceNr());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.persistence.kafka.journal.EventFormats.EventFormat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (akka.persistence.kafka.journal.EventFormats.EventFormat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string persistenceId = 1;
      private java.lang.Object persistenceId_ = "";
      /**
       * <code>optional string persistenceId = 1;</code>
       */
      public boolean hasPersistenceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string persistenceId = 1;</code>
       */
      public java.lang.String getPersistenceId() {
        java.lang.Object ref = persistenceId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          persistenceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string persistenceId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPersistenceIdBytes() {
        java.lang.Object ref = persistenceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          persistenceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string persistenceId = 1;</code>
       */
      public Builder setPersistenceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        persistenceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string persistenceId = 1;</code>
       */
      public Builder clearPersistenceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        persistenceId_ = getDefaultInstance().getPersistenceId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string persistenceId = 1;</code>
       */
      public Builder setPersistenceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        persistenceId_ = value;
        onChanged();
        return this;
      }

      // optional int64 sequenceNr = 2;
      private long sequenceNr_ ;
      /**
       * <code>optional int64 sequenceNr = 2;</code>
       */
      public boolean hasSequenceNr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 sequenceNr = 2;</code>
       */
      public long getSequenceNr() {
        return sequenceNr_;
      }
      /**
       * <code>optional int64 sequenceNr = 2;</code>
       */
      public Builder setSequenceNr(long value) {
        bitField0_ |= 0x00000002;
        sequenceNr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 sequenceNr = 2;</code>
       */
      public Builder clearSequenceNr() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceNr_ = 0L;
        onChanged();
        return this;
      }

      // optional .EventDataFormat data = 3;
      private akka.persistence.kafka.journal.EventFormats.EventDataFormat data_ = akka.persistence.kafka.journal.EventFormats.EventDataFormat.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.persistence.kafka.journal.EventFormats.EventDataFormat, akka.persistence.kafka.journal.EventFormats.EventDataFormat.Builder, akka.persistence.kafka.journal.EventFormats.EventDataFormatOrBuilder> dataBuilder_;
      /**
       * <code>optional .EventDataFormat data = 3;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .EventDataFormat data = 3;</code>
       */
      public akka.persistence.kafka.journal.EventFormats.EventDataFormat getData() {
        if (dataBuilder_ == null) {
          return data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .EventDataFormat data = 3;</code>
       */
      public Builder setData(akka.persistence.kafka.journal.EventFormats.EventDataFormat value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .EventDataFormat data = 3;</code>
       */
      public Builder setData(
          akka.persistence.kafka.journal.EventFormats.EventDataFormat.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .EventDataFormat data = 3;</code>
       */
      public Builder mergeData(akka.persistence.kafka.journal.EventFormats.EventDataFormat value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              data_ != akka.persistence.kafka.journal.EventFormats.EventDataFormat.getDefaultInstance()) {
            data_ =
              akka.persistence.kafka.journal.EventFormats.EventDataFormat.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .EventDataFormat data = 3;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = akka.persistence.kafka.journal.EventFormats.EventDataFormat.getDefaultInstance();
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .EventDataFormat data = 3;</code>
       */
      public akka.persistence.kafka.journal.EventFormats.EventDataFormat.Builder getDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .EventDataFormat data = 3;</code>
       */
      public akka.persistence.kafka.journal.EventFormats.EventDataFormatOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_;
        }
      }
      /**
       * <code>optional .EventDataFormat data = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          akka.persistence.kafka.journal.EventFormats.EventDataFormat, akka.persistence.kafka.journal.EventFormats.EventDataFormat.Builder, akka.persistence.kafka.journal.EventFormats.EventDataFormatOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.persistence.kafka.journal.EventFormats.EventDataFormat, akka.persistence.kafka.journal.EventFormats.EventDataFormat.Builder, akka.persistence.kafka.journal.EventFormats.EventDataFormatOrBuilder>(
                  data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:EventFormat)
    }

    static {
      defaultInstance = new EventFormat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EventFormat)
  }

  public interface EventDataFormatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 serializerId = 1;
    /**
     * <code>optional int32 serializerId = 1;</code>
     */
    boolean hasSerializerId();
    /**
     * <code>optional int32 serializerId = 1;</code>
     */
    int getSerializerId();

    // optional bytes data = 2;
    /**
     * <code>optional bytes data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    // optional bytes dataManifest = 3;
    /**
     * <code>optional bytes dataManifest = 3;</code>
     */
    boolean hasDataManifest();
    /**
     * <code>optional bytes dataManifest = 3;</code>
     */
    com.google.protobuf.ByteString getDataManifest();
  }
  /**
   * Protobuf type {@code EventDataFormat}
   */
  public static final class EventDataFormat extends
      com.google.protobuf.GeneratedMessage
      implements EventDataFormatOrBuilder {
    // Use EventDataFormat.newBuilder() to construct.
    private EventDataFormat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EventDataFormat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EventDataFormat defaultInstance;
    public static EventDataFormat getDefaultInstance() {
      return defaultInstance;
    }

    public EventDataFormat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EventDataFormat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              serializerId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              data_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              dataManifest_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.persistence.kafka.journal.EventFormats.internal_static_EventDataFormat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.persistence.kafka.journal.EventFormats.internal_static_EventDataFormat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.persistence.kafka.journal.EventFormats.EventDataFormat.class, akka.persistence.kafka.journal.EventFormats.EventDataFormat.Builder.class);
    }

    public static com.google.protobuf.Parser<EventDataFormat> PARSER =
        new com.google.protobuf.AbstractParser<EventDataFormat>() {
      public EventDataFormat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventDataFormat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EventDataFormat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 serializerId = 1;
    public static final int SERIALIZERID_FIELD_NUMBER = 1;
    private int serializerId_;
    /**
     * <code>optional int32 serializerId = 1;</code>
     */
    public boolean hasSerializerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 serializerId = 1;</code>
     */
    public int getSerializerId() {
      return serializerId_;
    }

    // optional bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    // optional bytes dataManifest = 3;
    public static final int DATAMANIFEST_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString dataManifest_;
    /**
     * <code>optional bytes dataManifest = 3;</code>
     */
    public boolean hasDataManifest() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes dataManifest = 3;</code>
     */
    public com.google.protobuf.ByteString getDataManifest() {
      return dataManifest_;
    }

    private void initFields() {
      serializerId_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      dataManifest_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, serializerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, dataManifest_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, serializerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, dataManifest_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.persistence.kafka.journal.EventFormats.EventDataFormat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.persistence.kafka.journal.EventFormats.EventDataFormat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EventDataFormat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.persistence.kafka.journal.EventFormats.EventDataFormatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.persistence.kafka.journal.EventFormats.internal_static_EventDataFormat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.persistence.kafka.journal.EventFormats.internal_static_EventDataFormat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.persistence.kafka.journal.EventFormats.EventDataFormat.class, akka.persistence.kafka.journal.EventFormats.EventDataFormat.Builder.class);
      }

      // Construct using akka.persistence.kafka.journal.EventFormats.EventDataFormat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serializerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        dataManifest_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.persistence.kafka.journal.EventFormats.internal_static_EventDataFormat_descriptor;
      }

      public akka.persistence.kafka.journal.EventFormats.EventDataFormat getDefaultInstanceForType() {
        return akka.persistence.kafka.journal.EventFormats.EventDataFormat.getDefaultInstance();
      }

      public akka.persistence.kafka.journal.EventFormats.EventDataFormat build() {
        akka.persistence.kafka.journal.EventFormats.EventDataFormat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public akka.persistence.kafka.journal.EventFormats.EventDataFormat buildPartial() {
        akka.persistence.kafka.journal.EventFormats.EventDataFormat result = new akka.persistence.kafka.journal.EventFormats.EventDataFormat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serializerId_ = serializerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dataManifest_ = dataManifest_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.persistence.kafka.journal.EventFormats.EventDataFormat) {
          return mergeFrom((akka.persistence.kafka.journal.EventFormats.EventDataFormat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.persistence.kafka.journal.EventFormats.EventDataFormat other) {
        if (other == akka.persistence.kafka.journal.EventFormats.EventDataFormat.getDefaultInstance()) return this;
        if (other.hasSerializerId()) {
          setSerializerId(other.getSerializerId());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasDataManifest()) {
          setDataManifest(other.getDataManifest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.persistence.kafka.journal.EventFormats.EventDataFormat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (akka.persistence.kafka.journal.EventFormats.EventDataFormat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 serializerId = 1;
      private int serializerId_ ;
      /**
       * <code>optional int32 serializerId = 1;</code>
       */
      public boolean hasSerializerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 serializerId = 1;</code>
       */
      public int getSerializerId() {
        return serializerId_;
      }
      /**
       * <code>optional int32 serializerId = 1;</code>
       */
      public Builder setSerializerId(int value) {
        bitField0_ |= 0x00000001;
        serializerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 serializerId = 1;</code>
       */
      public Builder clearSerializerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serializerId_ = 0;
        onChanged();
        return this;
      }

      // optional bytes data = 2;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // optional bytes dataManifest = 3;
      private com.google.protobuf.ByteString dataManifest_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes dataManifest = 3;</code>
       */
      public boolean hasDataManifest() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes dataManifest = 3;</code>
       */
      public com.google.protobuf.ByteString getDataManifest() {
        return dataManifest_;
      }
      /**
       * <code>optional bytes dataManifest = 3;</code>
       */
      public Builder setDataManifest(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        dataManifest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes dataManifest = 3;</code>
       */
      public Builder clearDataManifest() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dataManifest_ = getDefaultInstance().getDataManifest();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EventDataFormat)
    }

    static {
      defaultInstance = new EventDataFormat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EventDataFormat)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EventFormat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EventFormat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EventDataFormat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EventDataFormat_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$src/main/protobuf/EventFormats.proto\"X" +
      "\n\013EventFormat\022\025\n\rpersistenceId\030\001 \001(\t\022\022\n\n" +
      "sequenceNr\030\002 \001(\003\022\036\n\004data\030\003 \001(\0132\020.EventDa" +
      "taFormat\"K\n\017EventDataFormat\022\024\n\014serialize" +
      "rId\030\001 \001(\005\022\014\n\004data\030\002 \001(\014\022\024\n\014dataManifest\030" +
      "\003 \001(\014B\"\n\036akka.persistence.kafka.journalH" +
      "\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_EventFormat_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_EventFormat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EventFormat_descriptor,
              new java.lang.String[] { "PersistenceId", "SequenceNr", "Data", });
          internal_static_EventDataFormat_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_EventDataFormat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EventDataFormat_descriptor,
              new java.lang.String[] { "SerializerId", "Data", "DataManifest", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
